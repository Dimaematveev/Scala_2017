1. Симпатичное дерево

	Марина очень любит решать алгоритмические задачи. 
	Так же ей нравится, когда все аккуратно и красиво. 
	Однажды, когда она изучала бинарные деревья поиска (BST), ей захотелось красиво распечатать дерево, содержащее целые числа. 
	Марина знает, что в BST первый добавленный элемент становится корнем дерева. 
	Все элементы меньше корня добавляются в левое поддерево, а большие в правое. 
	Элементы, равные уже присутствующим, в дерево не добавляются. 
	Помогите Марине написать программу, которая распечатывает дерево в нужном формате.

Входные данные:
	В первой строке входного файла содержится одно число N (1 ≤ N ≤ 10000). 
	Это количество чисел, содержащихся в дереве. 
	Далее следуют сами числа V (1 ≤ V ≤ 1000) по одному в каждой строке в порядке добавления в дерево.

Выходные данные:
	Вывод программы должен быть набором из R строк, пронумерованных от 0 до R-1, длина каждой из которых равна Ci (0 ≤ i < R). 
	Каждая строка должна заканчиваться символом перевода строки. 
	В строке с номером i должны быть расположены числа, которые находятся на расстоянии i от корня. 
	Пусть C_max — длина наибольшей строки, тогда для каждого j (0 ≤ j ≤ Cmax-2) должно быть верно, что в столбце с этим номером находится ровно одна цифра. 
	Каждый элемент дерева должен быть выведен справа от его левого поддерева и слева от его правого.

Решение:
	Нужно считать данные, проигнорировав одинаковые числа, после чего вывести в нужном формате. 
	Для вывода удобно создать буфер под каждую строку и выводить в него, поддерживая общий сдвиг по горизонтали.